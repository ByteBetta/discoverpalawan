<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Created by Console.
 * User: Amine Maagoul
 * Date: {date}
 * Time: {time}
 */

class Event extends MY_Controller {

    public function __construct(){
        parent::__construct();

        define('MAX_EVENT_IMAGES',6);
        define('KS_NBR_EVENTS_MONTHLY','nbr_events_monthly');

        define('ADD_EVENT','add');
        define('EDIT_EVENT','edit');
        define('DELETE_EVENT','delete');
        define('VALIDATE_EVENTS','validate_events');

        $data = array(
            "version_code"  =>2,
            "version_name"  => "1.0.1 Beta",
            "order"     =>4
        );

        FModuleLoader::register($this,$data);


        TemplateManager::registerMenu(
            'event',
            "event/menu",
            3
        );

        //load model
        $this->load->model("user/user_model","mUserModel");
        $this->load->model("event/event_model","mEventModel");


        $this->load->helper('event/event');


    }

    public function onLoaded()
    {
        parent::onLoaded(); // TODO: Change the autogenerated stub

        $this->registerModuleActions();

        //Setup User Config
        UserSettingSubscribe::set('event',array(
            'field_name' => KS_NBR_EVENTS_MONTHLY,
            'field_type' => UserSettingSubscribeTypes::INT,
            'field_default_value' => -1,
            'config_key' => 'NBR_EVENTS_MONTHLY',
            'field_label' => 'Events Allowed Monthly',
            'field_sub_label' => '( -1 Unlimited )',
            'field_comment' => '',
        ));




    }

    private function registerModuleActions(){


        GroupAccess::registerActions("event",array(
            ADD_EVENT,
            EDIT_EVENT,
            DELETE_EVENT,
            VALIDATE_EVENTS,
        ));

    }

    public function index(){

    }

    public function id(){
        $this->load->library('user_agent');

        $id = intval($this->uri->segment(3));

        if($id==0)
            redirect("?err=1");

        $platform =  $this->agent->platform();

        if(/*Checker::user_agent_exist($user_agent,"ios")*/ strtolower($platform)=="ios"){

            $link = site_url("event/id/$id");
            $link = str_replace('www.', '', $link);
            $link = str_replace('http://', 'nsapp://', $link);
            $link = str_replace('https://', 'nsapp://', $link);

            $this->session->set_userdata(array(
                "redirect_to" =>  $link
            ));

            redirect("");
        }

        redirect("");

    }

}

/* End of file EventDB.php */