<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');

/**
 * Created by Console.
 * User: Amine Maagoul
 * Date: {date}
 * Time: {time}
 */

class Offer extends MY_Controller {

    public function __construct(){
        parent::__construct();

        $data = array(
            "version_code"  =>3,
            "version_name"  => "1.0.1 Beta",
            "order"     =>3
        );

        FModuleLoader::register($this,$data);

        TemplateManager::registerMenu(
            'offer',
            "offer/menu",
            2
        );

        define('MAX_OFFER_IMAGES',1);
        define('KS_NBR_OFFERS_MONTHLY','nbr_offers_monthly');

        define('ADD_OFFER','add');
        define('EDIT_OFFER','edit');
        define('DELETE_OFFER','delete');
        define('VALIDATE_OFFERS','validate_offers');



        //load model
        $this->load->model("offer/offer_model","mOfferModel");

        //load helper
        $this->load->helper('offer/offer');


    }

    public function onLoaded()
    {
        parent::onLoaded(); // TODO: Change the autogenerated stub

        $this->load->model("user/group_access_model","mGroupAccessModel");
        $this->load->helper("user/group_access");
        $this->load->helper("user/user");


        //Setup User Config
        UserSettingSubscribe::set('offer',array(
            'field_name' => KS_NBR_OFFERS_MONTHLY,
            'field_type' => UserSettingSubscribeTypes::INT,
            'field_default_value' => -1,
            'config_key' => 'NBR_OFFERS_MONTHLY',
            'field_label' => 'Offers allowed monthly',
            'field_sub_label' => '( -1 Unlimited )',
            'field_comment' => '',
        ));


        $this->registerModuleActions();


    }

    private function registerModuleActions(){


        GroupAccess::registerActions("offer",array(
            ADD_OFFER,
            EDIT_OFFER,
            DELETE_OFFER,
            VALIDATE_OFFERS,
        ));

    }

	public function index()
	{

	}

    public function dp()
    {
        redirect(site_url(""));
    }


    public function id(){
        $this->load->library('user_agent');

        $id = intval($this->uri->segment(3));

        if($id==0)
            redirect("?err=1");

        $platform =  $this->agent->platform();

        if(/*Checker::user_agent_exist($user_agent,"ios")*/ strtolower($platform)=="ios"){

            $link = site_url("offer/id/$id");
            $link = str_replace('www.', '', $link);
            $link = str_replace('http://', 'nsapp://', $link);
            $link = str_replace('https://', 'nsapp://', $link);

            $this->session->set_userdata(array(
                "redirect_to" =>  $link
            ));

            redirect("");
        }

        redirect("");

    }

    public function onUpgrade()
    {
        parent::onUpgrade(); // TODO: Change the autogenerated stub

        $this->mOfferModel->updateFields();
        $this->mOfferModel->addFields16();
    }

    public function onInstall()
    {
        parent::onInstall(); // TODO: Change the autogenerated stub

        $this->mOfferModel->updateFields();
        $this->mOfferModel->addFields16();
    }

    public function cron(){

        $this->mOfferModel->hiddenOfferOutOfDate();

    }



}

/* End of file OfferDB.php */